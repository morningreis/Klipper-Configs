#####################################################################
#	Macros
#####################################################################
[gcode_macro SET_LED_CALIBRATE_START]
gcode:
	SET_LED LED=Neopixel RED=0 GREEN=0.35 BLUE=0.5

[gcode_macro SET_LED_CALIBRATE_END]
gcode:
	SET_LED LED=Neopixel RED=0.35 GREEN=0.35 BLUE=0.35

[gcode_macro SET_LED_EXT_HEAT_START]
gcode:
	SET_LED LED=Neopixel RED=0.75 GREEN=0.07 BLUE=0

[gcode_macro SET_LED_BED_HEAT_START]
gcode:
	SET_LED LED=Neopixel RED=0.75 GREEN=0 BLUE=0

[gcode_macro SET_LED_PRINT_COMPLETE]
gcode:
	SET_LED LED=Neopixel RED=0 GREEN=0.75 BLUE=0

[gcode_macro CHECK_PROBE_STATUS]
gcode:
	_CheckProbe action=query

[gcode_macro CAL_BED_MESH]
gcode:
	SET_LED_CALIBRATE_START
	BED_MESH_CALIBRATE
	SET_LED_CALIBRATE_END

[gcode_macro CAL_Z_TILT]
gcode:
	SET_LED_CALIBRATE_START
	Z_TILT_ADJUST
	SET_LED_CALIBRATE_END

[gcode_macro CAL_SCREW_TILT]
gcode:
	SET_LED_CALIBRATE_START
	SCREWS_TILT_CALCULATE
	SET_LED_CALIBRATE_END

[z_tilt]
##	Use Z_TILT_ADJUST to level the bed left to right.
##	z_positions: Location of toolhead

## Uncomment below for 300mm build
z_positions:
	-35, 153
	338, 153
points:
	30, 131
	270, 131
##--------------------------------------------------------------------

speed: 250
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.01

## Z Tilt Adjust
[gcode_macro Z_TILT_ADJUST]
rename_existing:             _Z_TILT_ADJUST
description:
gcode:
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("Z Tilt Adjust") }
    {% endif %}

    _CheckProbe action=query
    Attach_Probe

    _Z_TILT_ADJUST {% for p in params
          %}{'%s=%s ' % (p, params[p])}{%
         endfor %}
    Dock_Probe
    G28 Z0


[screws_tilt_adjust]
## To run this command, use SCREWS_TILT_CALCULATE
##--------------------------------------------------------------------
##	Uncomment below for 300x300
screw1: 30,230
screw1_name: rear left screw
screw2: 270,230
screw2_name: rear right screw
screw3: 150,10
screw3_name: front screw
horizontal_move_z: 10
speed: 200
screw_thread: CCW-M3

# Screws Tilt Adjust
[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing:             _SCREWS_TILT_CALCULATE
description: 
gcode:
    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("Screws Tilt Adjust") }
    {% endif %}

    _CheckProbe action=query
    Attach_Probe

    _SCREWS_TILT_CALCULATE {% for p in params
          %}{'%s=%s ' % (p, params[p])}{%
         endfor %}

    Dock_Probe

##--------------------------------------------------------------------

[bed_mesh]
speed: 200
horizontal_move_z: 15
##--------------------------------------------------------------------

##	Uncomment for 300mm build
mesh_min: 25, 25
mesh_max: 275,275
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 3,3
algorithm: bicubic
relative_reference_index: 5

[gcode_macro BED_MESH_CALIBRATE]
rename_existing:             _BED_MESH_CALIBRATE
description: Perform Mesh Bed Leveling with klicky automount
gcode:

    {% set V = printer["gcode_macro _User_Variables"].verbose %}
    {% if V %}
        { action_respond_info("Bed Mesh Calibrate") }
    {% endif %}

    _CheckProbe action=query
    Attach_Probe

    _BED_MESH_CALIBRATE {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}

    Dock_Probe

[delayed_gcode DELAYED_OFF]
gcode:
	OFF

[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(100)|int %}
	{% set move = params.MOVE|default(1)|int %}

	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	SET_FAN_SPEED FAN=exhaust_fan SPEED=0		 		; turn off exhaust fan
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S180									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										; conditional home
		PARKCENTER						 			; move to bed
	{% endif %}

[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

[gcode_macro PRINT_START]
#	Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
	M104 S155
	M117 Homing...				   ; display message
	G28 Y0 X0 Z0
	Z_TILT_ADJUST
	BED_MESH_CALIBRATE
	G28 Y0 X0 Z0
	M109 S{params.EXTRUDER}
	SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0
	SET_FAN_SPEED FAN=backpack_fan SPEED=1.0
	
	#Purge Line Gcode
	G92 E0;
	G90
	G0 X5 Y5 F6000
	G0 Z0.4
	G91
	G1 X120 E30 F1200;
	G1 Y1
	G1 X-120 E30 F1200;
	G92 E0;
	G90

	G1 Z15.0 F600 ;move the platform down 15mm
	G1 X125 Y125 F3000
	G92 E0 ;zero the extruded length again
	G1 F9000
	M117 Printing...

[gcode_macro PRINT_END]
#	Use PRINT_END for the slicer ending script
gcode:
	#	Get Boundaries
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

	#	Check end position to determine safe directions to move
	{% if printer.toolhead.position.x < (max_x - 20) %}
		{% set x_safe = 20.0 %}
	{% else %}
		{% set x_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.y < (max_y - 20) %}
		{% set y_safe = 20.0 %}
	{% else %}
		{% set y_safe = -20.0 %}
	{% endif %}

	{% if printer.toolhead.position.z < (max_z - 2) %}
		{% set z_safe = 2.0 %}
	{% else %}
		{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}

	#  Commence PRINT_END
	M400							 ; wait for buffer to clear
	G92 E0							 ; zero the extruder
	G1 E-4.0 F3600					 ; retract
	G91								 ; relative positioning
	G0 Z{z_safe} F3600				 ; move nozzle up
	G0 X{x_safe} Y{y_safe} F20000	 ; move nozzle to remove stringing

	M104 S0							 ; turn off hotend
	M140 S0							 ; turn off bed
	M106 S0							 ; turn off fan
	G90								 ; absolute positioning
	G0 X{max_x / 2} Y{max_y} F3600	 ; park nozzle at rear
	M117 Finished!